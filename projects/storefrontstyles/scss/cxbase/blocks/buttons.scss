@import '../../theme';
@import '~bootstrap/scss/buttons';

button {
  &:focus {
    outline: none;
  }

  &.link {
    text-decoration: underline;
    background: none !important;
    border: none;
    padding: 0 !important;
    cursor: pointer;

    &:disabled {
      pointer-events: none !important;
      cursor: not-allowed !important;
      opacity: 0.8;
    }
  }
}

//buttons - https://github.com/twbs/bootstrap/blob/v4-dev/scss/_variables.scss#L348
.btn {
  text-transform: $btn-text-transform;
  font-size: $font-size-base * 1.125;
  line-height: 1.34;
  padding: 11px 12px;
  height: 48px;
  max-height: 48px;
  min-width: 48px;

  &-sm {
    padding-top: 0;
    padding-bottom: 0;
    height: 40px;
    max-height: 40px;
    min-width: 40px;
  }

  &-lg {
    height: 55px;
    max-height: 55px;
    min-width: 55px;
  }

  &-primary {
    background-color: var(--cx-background-color, var(--cx-g-color-primary));
    border-color: var(--cx-border-color, var(--cx-g-color-primary));

    &:hover {
      background-color: var(--cx-background-color, var(--cx-g-color-primary));
      border-color: var(--cx-border-color, var(--cx-g-color-primary));
      @include cx-darken(88);
    }

    &.active {
      background-color: var(--cx-background-color, var(--cx-g-color-primary));
      border-color: var(--cx-border-color, var(--cx-g-color-primary));
      @include cx-darken(88);
    }

    &.disabled {
      background-color: var(--cx-background-color, var(--cx-g-color-primary));
      border-color: var(--cx-border-color, var(--cx-g-color-primary));

      &:hover {
        border-color: var(--cx-border-color, var(--cx-g-color-primary));
        @include cx-darken(100);
      }
    }

    &:focus {
      box-shadow: 0 0 0 0.2em rgba($primary, 0.5);
    }

    &:not(:disabled):not(.disabled):active,
    &:not(:disabled):not(.disabled).active {
      background-color: var(--cx-background-color, var(--cx-g-color-primary));
      border-color: var(--cx-border-color, var(--cx-g-color-primary));
      @include cx-darken(88);

      &:focus {
        box-shadow: 0 0 0 0.2em rgba($primary, 0.5);
      }
    }
  }

  &-secondary {
    background-color: var(--cx-background-color, var(--cx-g-color-secondary));
    border-color: var(--cx-border-color, var(--cx-g-color-secondary));

    &:hover {
      background-color: var(--cx-background-color, var(--cx-g-color-secondary));
      border-color: var(--cx-border-color, var(--cx-g-color-secondary));
      @include cx-darken(84);
    }

    &.active {
      background-color: var(--cx-background-color, var(--cx-g-color-secondary));
      border-color: var(--cx-border-color, var(--cx-g-color-secondary));
      @include cx-darken(84);
    }

    &.disabled {
      background-color: var(--cx-background-color, var(--cx-g-color-secondary));
      border-color: var(--cx-border-color, var(--cx-g-color-secondary));

      &:hover {
        border-color: var(--cx-border-color, var(--cx-g-color-secondary));
        @include cx-darken(100);
      }
    }

    &:focus {
      box-shadow: 0 0 0 0.2em rgba($secondary, 0.5);
    }

    &:not(:disabled):not(.disabled):active,
    &:not(:disabled):not(.disabled).active {
      background-color: var(--cx-background-color, var(--cx-g-color-secondary));
      border-color: var(--cx-border-color, var(--cx-g-color-secondary));
      @include cx-darken(84);

      &:focus {
        box-shadow: 0 0 0 0.2em rgba($secondary, 0.5);
      }
    }
  }

  &-link {
    color: theme-color('text');
    font-size: $font-size-base * 1.125;
    text-decoration: underline !important;
    cursor: pointer;
    display: inline-block;
  }
}

.btn-action {
  @extend .btn-outline-text !optional;
  border: 2px solid;

  &:hover {
    color: var(--cx-color, var(--cx-g-color-primary));
    border: 2px solid theme-color('primary');
    background-color: theme-color('inverse');
  }

  &.active {
    color: var(--cx-color, var(--cx-g-color-primary));
    // color: theme-color('primary') !important;
    border: 2px solid !important;
    background-color: theme-color('inverse') !important;
  }

  &.disabled {
    color: var(--cx-color, var(--cx-g-color-light));
    border: 2px solid theme-color('light');
    opacity: 1;
  }
}

.btn[aria-pressed='true'] {
  @extend .btn.active;

  &.btn-primary {
    @extend .btn-primary;
  }

  &.btn-secondary {
    @extend .btn-secondary;
  }

  &.btn-action {
    @extend .btn-action;
  }
}

.btn[aria-disabled='true'] {
  @extend .btn.disabled;
  cursor: auto !important;
  opacity: 0.6;

  &.btn-primary {
    @extend .btn-primary.disabled;
  }

  &.btn-secondary {
    @extend .btn-secondary.disabled;
  }

  &.btn-action {
    @extend .btn-action.disabled;
  }
}

.btn[disabled] {
  &.btn-primary {
    @extend .btn-primary.disabled;
  }

  &.btn-secondary {
    @extend .btn-secondary.disabled;
  }

  &.btn-action {
    @extend .btn-action.disabled;
  }
}
